libdir := lib
plugindir := plugin

LDFLAGS := -lm 
LDFLAGS += -L$(libdir) -llattice -Wl,-rpath,$(libdir)

## automatic perquisites
CFLAGS = -MMD -MT $(basename $@).d

CFLAGS += -Wall -O3 -ffast-math
CFLAGS += -ftree-vectorize #-ftree-vectorizer-verbose=1 

## CPU (select one)
#CFLAGS += -march=i686
#CFLAGS += -march=athlon64
#CFLAGS += -march=athlon-xp
#CFLAGS += -march=pentium-m


sources := $(filter-out glvec.c lattice.c helicity.c, $(wildcard *.c))
plugins := $(plugindir)/correlation.so $(plugindir)/vortex.so $(plugindir)/helicity.so

progs := $(patsubst %.c, %, ${sources})
@HAVE_LIBGLUT_TRUE@progs += glvec


.PHONY: all
all: $(libdir)/liblattice.so $(progs) $(plugins)

%: %.c
	${CC} ${CFLAGS} ${LDFLAGS} -o $@ $<

## shared objects
$(plugindir)/%.so: %.c
	${CC} $(CFLAGS) -shared -fpic -Wl,-soname,$@ -Wall -o $@ $<

$(libdir)/liblattice.so: lattice.c
	${CC} $(CFLAGS) -shared -fpic -Wl,-soname,liblattice.so -Wall -o $@ $<


## automatic perquisites
-include $(sources:.c=.d)
-include $(wildcard lib/*.d)
-include $(wildcard plugin/*.d)


mcrun: LDFLAGS += -ldl 

@HAVE_LIBCURSES_TRUE@progress: LDFLAGS = -lcurses


## glvec: install libglut-dev to compile
-include glvec.d

# OS X hack
ifneq (,$(findstring Darwin, $(shell uname -s)))
	LD_GLUT := -framework GLUT -framework OpenGL -lobjc
else
	LD_GLUT := -lglut
endif

glvec: LDFLAGS += $(LD_GLUT)

.PHONY: check
check: all
	@./test/test.sh

.PHONY: dist
distdir := @PACKAGE_NAME@-@PACKAGE_VERSION@

# sorry only works in svn
# TODO
dist:
	rm -rf ${distdir}
	mkdir -p ${distdir}
	cd ${distdir} && mkdir -p plugin lib test plot

	svn ls -R | grep -e "\.c$$" -e "\.h$$" |xargs -I '{}' cp '{}' ${distdir}/'{}'
	cp `svn ls|grep -v "/$$"`  ${distdir}

	svn ls -R  test | xargs -I '{}' cp test/'{}' ${distdir}/test/'{}'
	svn ls -R  plot | xargs -I '{}' cp plot/'{}' ${distdir}/plot/'{}'

	cp configure ${distdir}

	tar -cjf xymodel.tar.bz2  ${distdir}
#	rm -rf ${distdir}

.PHONY: clean
clean:
	rm -f -- *.o ${progs} glvec *.d *.gch
	rm -f -- $(libdir)/*.so $(libdir)/*.d
	rm -f -- $(plugindir)/*.so  $(plugindir)/*.d
